\hypertarget{MyDLL_8h}{}\doxysection{My\+DLL.\+h File Reference}
\label{MyDLL_8h}\index{MyDLL.h@{MyDLL.h}}


This file contains all the structures and functions needed for the database creation.  


{\ttfamily \#include $<$stdint.\+h$>$}\newline
Include dependency graph for My\+DLL.\+h\+:
% FIG 0
This graph shows which files directly or indirectly include this file\+:
% FIG 1
\doxysubsection*{Classes}
\begin{DoxyCompactItemize}
\item 
struct \mbox{\hyperlink{structMyDLL}{My\+DLL}}
\begin{DoxyCompactList}\small\item\em A structure representing a doubly linked list node. \end{DoxyCompactList}\item 
struct \mbox{\hyperlink{structDLL__List}{DLL\+\_\+\+List}}
\begin{DoxyCompactList}\small\item\em A structure representing a doubly linked list. \end{DoxyCompactList}\end{DoxyCompactItemize}
\doxysubsection*{Macros}
\begin{DoxyCompactItemize}
\item 
\#define \mbox{\hyperlink{group__MyDLL_gaa84da8be2a5293eca8340e41e267af15}{MAX\+\_\+\+ELEM\+\_\+\+SIZE}}~100
\item 
\#define \mbox{\hyperlink{group__MyDLL_ga52a03eea6b90f6bc967ed15a7e6a36b9}{MAX\+\_\+\+LIST\+\_\+\+SIZE}}~8
\item 
\#define \mbox{\hyperlink{group__MyDLL_ga7b05b8118861711fd8573e92759bbc34}{FULL}}~-\/1
\item 
\#define \mbox{\hyperlink{group__MyDLL_gaba51915c87d64af47fb1cc59348961c9}{OK}}~0
\item 
\#define \mbox{\hyperlink{group__MyDLL_ga375faf90c5c25165d32e4ba2bc2d8633}{Not\+Key}}~NULL
\item 
\#define \mbox{\hyperlink{group__MyDLL_gad966757bf39e47e1aa0d99ba215adcfc}{Not\+Key\+Int}}~-\/2
\end{DoxyCompactItemize}
\doxysubsection*{Typedefs}
\begin{DoxyCompactItemize}
\item 
typedef struct \mbox{\hyperlink{structMyDLL}{My\+DLL}} {\bfseries My\+DLL}
\item 
typedef struct \mbox{\hyperlink{structDLL__List}{DLL\+\_\+\+List}} {\bfseries DLL\+\_\+\+List}
\end{DoxyCompactItemize}
\doxysubsection*{Functions}
\begin{DoxyCompactItemize}
\item 
void \mbox{\hyperlink{group__MyDLL_ga7bbbb937afa23d40c118e6c6c02a6204}{My\+DLLInit}} (\mbox{\hyperlink{structDLL__List}{DLL\+\_\+\+List}} $\ast$dll)
\begin{DoxyCompactList}\small\item\em Initialize a doubly linked list. \end{DoxyCompactList}\item 
int \mbox{\hyperlink{group__MyDLL_ga995df0db0073df3bfb0fe89c1e63fea2}{My\+DLLInsert}} (\mbox{\hyperlink{structDLL__List}{DLL\+\_\+\+List}} $\ast$dll, uint16\+\_\+t key, uint8\+\_\+t $\ast$data)
\begin{DoxyCompactList}\small\item\em Insert a new node into the doubly linked list. \end{DoxyCompactList}\item 
\mbox{\hyperlink{structMyDLL}{My\+DLL}} $\ast$ \mbox{\hyperlink{group__MyDLL_ga2533d45a12658930b8c2c67119f3367b}{My\+DLLFind}} (\mbox{\hyperlink{structDLL__List}{DLL\+\_\+\+List}} $\ast$dll, uint16\+\_\+t key)
\begin{DoxyCompactList}\small\item\em Find a node in the doubly linked list by its key. \end{DoxyCompactList}\item 
int \mbox{\hyperlink{group__MyDLL_gaa2498562892bfd14e73482982915f327}{My\+DLLRemove}} (\mbox{\hyperlink{structDLL__List}{DLL\+\_\+\+List}} $\ast$dll, uint16\+\_\+t key)
\begin{DoxyCompactList}\small\item\em Remove a node from the doubly linked list by its key. \end{DoxyCompactList}\item 
void \mbox{\hyperlink{group__MyDLL_ga041aea7aac47c215cea3e9eee46d097f}{My\+DLLPrint}} (\mbox{\hyperlink{structDLL__List}{DLL\+\_\+\+List}} $\ast$dll)
\begin{DoxyCompactList}\small\item\em Print the contents of the doubly linked list. \end{DoxyCompactList}\item 
\mbox{\hyperlink{structMyDLL}{My\+DLL}} $\ast$ \mbox{\hyperlink{group__MyDLL_ga100438da3aedfbd99feb880ad5fe8c19}{My\+DLLFind\+Next}} (\mbox{\hyperlink{structDLL__List}{DLL\+\_\+\+List}} $\ast$dll, uint16\+\_\+t key)
\begin{DoxyCompactList}\small\item\em Find the next node in the doubly linked list based on the key. \end{DoxyCompactList}\item 
\mbox{\hyperlink{structMyDLL}{My\+DLL}} $\ast$ \mbox{\hyperlink{group__MyDLL_ga3bdacbef238b925cb83802a80c366cdf}{My\+DLLFind\+Previous}} (\mbox{\hyperlink{structDLL__List}{DLL\+\_\+\+List}} $\ast$dll, uint16\+\_\+t key)
\begin{DoxyCompactList}\small\item\em Find the previous node in the doubly linked list based on the key. \end{DoxyCompactList}\item 
void \mbox{\hyperlink{group__MyDLL_gaa78591560a0b9fcde509319d14b4c8f7}{My\+DLLSort\+Ascending}} (\mbox{\hyperlink{structDLL__List}{DLL\+\_\+\+List}} $\ast$dll)
\begin{DoxyCompactList}\small\item\em Sort the doubly linked list in ascending order based on the keys. \end{DoxyCompactList}\item 
void \mbox{\hyperlink{group__MyDLL_gaecb656ecccb717bad0eb9b9503812a51}{My\+DLLSort\+Descending}} (\mbox{\hyperlink{structDLL__List}{DLL\+\_\+\+List}} $\ast$dll)
\begin{DoxyCompactList}\small\item\em Sort the doubly linked list in descending order based on the keys. \end{DoxyCompactList}\item 
void \mbox{\hyperlink{group__MyDLL_ga92efe67fd3766987f054bac6afc0161a}{swap\+Nodes}} (\mbox{\hyperlink{structMyDLL}{My\+DLL}} $\ast$a, \mbox{\hyperlink{structMyDLL}{My\+DLL}} $\ast$b)
\begin{DoxyCompactList}\small\item\em Swap the data of two nodes in the list. \end{DoxyCompactList}\item 
void \mbox{\hyperlink{group__MyDLL_ga9414b3092dbb7a1c247c057ad1e3deb5}{My\+DLLClear}} (\mbox{\hyperlink{structDLL__List}{DLL\+\_\+\+List}} $\ast$dll)
\begin{DoxyCompactList}\small\item\em Clear all nodes from the doubly linked list. \end{DoxyCompactList}\end{DoxyCompactItemize}


\doxysubsection{Detailed Description}
This file contains all the structures and functions needed for the database creation. 

This file provides the necessary structures and functions to work with a doubly linked list-\/based database. The database consists of nodes represented by the structure \mbox{\hyperlink{structMyDLL}{My\+DLL}}, each containing a key-\/value pair where the key is a 16-\/bit unsigned integer and the value is an array of bytes. The database itself is represented by the structure \mbox{\hyperlink{structDLL__List}{DLL\+\_\+\+List}}, which contains an array of nodes, pointers to the head and tail of the list, and the current size of the list. The functions provided allow for the initialization, insertion, searching, removal, printing, sorting, and clearing of the database. Additionally, macros are defined for maximum element and list sizes, as well as error codes.

\begin{DoxyAuthor}{Author}
Pedro Afonso, 104206 

Carlos Teixeira, 103187 
\end{DoxyAuthor}
\begin{DoxyDate}{Date}
10/3/2024 
\end{DoxyDate}
\begin{DoxyRefDesc}{Bug}
\item[\mbox{\hyperlink{bug__bug000001}{Bug}}]There are no known bugs.\end{DoxyRefDesc}
